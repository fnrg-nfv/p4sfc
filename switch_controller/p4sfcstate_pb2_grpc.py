# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import p4sfcstate_pb2 as p4sfcstate__pb2


class RPCStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SayHello = channel.unary_unary(
        '/P4SFCState.RPC/SayHello',
        request_serializer=p4sfcstate__pb2.HelloRequest.SerializeToString,
        response_deserializer=p4sfcstate__pb2.HelloReply.FromString,
        )
    self.GetState = channel.unary_unary(
        '/P4SFCState.RPC/GetState',
        request_serializer=p4sfcstate__pb2.Empty.SerializeToString,
        response_deserializer=p4sfcstate__pb2.TableEntryReply.FromString,
        )


class RPCServicer(object):
  """The greeting service definition.
  """

  def SayHello(self, request, context):
    """Sends a greeting for test
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetState(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SayHello': grpc.unary_unary_rpc_method_handler(
          servicer.SayHello,
          request_deserializer=p4sfcstate__pb2.HelloRequest.FromString,
          response_serializer=p4sfcstate__pb2.HelloReply.SerializeToString,
      ),
      'GetState': grpc.unary_unary_rpc_method_handler(
          servicer.GetState,
          request_deserializer=p4sfcstate__pb2.Empty.FromString,
          response_serializer=p4sfcstate__pb2.TableEntryReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'P4SFCState.RPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
